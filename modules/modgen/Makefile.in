#
#
#
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
prefix 		= @prefix@
exec_prefix 	= @exec_prefix@
libdir 		= @libdir@
includedir	= @includedir@
# program executable goes here
bindir		= @bindir@
# Singular libs go here
includedir	= @includedir@
MOD_DEST	= ./include
INC_SRC		= $(topsrcdir)/Singular

SINGUNAME	= @SINGUNAME@
SING_UNAME	= @SING_UNAME@
SINGULAR_VERSION = @SINGULAR_VERSION@
S_VERSION       = $${SINGULAR_VERSION-@SINGULAR_VERSION@}
DISTROOT_NAME   = Singular-${S_VERSION}
BINDIST_NAME    = ${DISTROOT_NAME}-${SINGUNAME}
SHAREDIST_NAME  = ${DISTROOT_NAME}-share
MKINSTALLDIRS   = $(topsrcdir)/Singular/mkinstalldirs
LN_S            = @LN_S@
INSTALL         = $(topsrcdir)/Singular/install-sh -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA    = ${INSTALL} -m 644
MODGEN		= $(bindir)/modgen
BISON		= bison

CFLAGS	+= -g -I${includedir} -I../include -I../../Singular -DNDEBUG -DMODULE_GENERATOR \
	-D${SING_UNAME}
LIBS	+= -L/usr/local/lib -lgmp

OBJS	= main.o grammar.o scanner.o misc.o makefile.o utils.o \
	creat_top.o proc.o proc_setup.o

all	= modgen

.cc.o:
	gcc -c ${CFLAGS} $<

.c.o:
	gcc -c ${CFLAGS} $<

all: modgen

pathnames.h:
	echo "/*" > pathnames.h
	echo " *" >> pathnames.h
	echo " */" >> pathnames.h
	echo "" >> pathnames.h
	echo "#define TOPSRCDIR \"$(topsrcdir)\"" >> pathnames.h
	echo "#define LIBDIR    \"$(libdir)\"" >> pathnames.h
	echo "#define PREFIX	\"$(prefix)\"" >> pathnames.h
	echo "#define EXEC_PREFIX	\"$(exec_prefix)\"" >> pathnames.h

modgen: ${OBJS} modgen.h decl.inc typmap.h pathnames.h stype.h
	gcc -o $@ ${CFLAGS} ${OBJS} ${LIBS}

scanner.cc: scanner.l grammar.h modgen.h
	flex -oscanner.cc scanner.l

#	flex -Pyymod -oscanner.cc scanner.l

clean:
	rm -f scanner.cc *.o core modgen
	rm -f pathnames.h

distclean: clean
	rm -f a.out *~ 
	rm -f grammar.cc grammar.h decl.inc 
#	rm -f Makefile

install: modgen
	${MKINSTALLDIRS} ${bindir}
	${INSTALL_PROGRAM} modgen ${bindir}/modgen-${SINGULAR_VERSION}
	rm -f ${bindir}/modgen
	cd ${bindir}; ${LN_S} modgen-${SINGULAR_VERSION} modgen;\
	if test ! -x ${MODGEN}; then \
		${LN_S} modgen-${SINGULAR_VERSION} ${MODGEN};\
	fi


#
#
#
test:	modgen
	rm -rf tmp
	mkdir tmp
	./modgen ../kernel/kernel.mod

#
#
#
decl.inc: ../../Singular/grammar.h ../../Singular/tok.h
	-echo "/* declaration for modgen.cc */" > $@
	-grep "^#define" ../../Singular/grammar.h | awk \
		'{print "\tcase "$$2": strcpy(name,\""$$2"\"); break;"}' >> $@
	-echo "" >> $@
	-echo "/* declaration from tok.h */" >> $@
	-grep "^  [A-Z_]*," ../../Singular/tok.h | sed "s/,//g" | awk \
		'{print "\tcase "$$1": strcpy(name,\""$$1"\"); break;"}'>>$@

.y.cc:
	@if test "x${BISON}" = x; then \
		echo Error: no bison given, could not rebuilt grammar.cc;\
                exit 1; \
	fi
	${BISON} -v -d -t -o grammar.cc $<
	mv grammar.cc.h grammar.h

makefile.cc:	pathnames.h
misc.cc:	modgen.h decl.inc
utils.cc:	modgen.h
grammar.cc:	grammar.y
grammar.h:	grammar.y
