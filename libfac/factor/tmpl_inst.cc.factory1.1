// emacs edit mode for this file is -*- C++ -*-
// $Id: tmpl_inst.cc.factory1.1,v 1.2 1997-06-09 15:56:13 Singular Exp $

#include <templates/array.cc>
#include <templates/factor.cc>
#include <templates/list.cc>

#include <factory.h>

template class Factor<CanonicalForm>;
template class List<CFFactor>;
template class ListIterator<CFFactor>;
template class List<CanonicalForm>;
template class ListIterator<CanonicalForm>;
template class Array<CanonicalForm>;
template class List<MapPair>;
template class ListIterator<MapPair>;

template ostream & operator << ( ostream &, const List<CanonicalForm> & );
template ostream & operator << ( ostream &, const List<CFFactor> & );
template ostream & operator << ( ostream &, const List<MapPair> & );
template ostream & operator << ( ostream &, const Array<CanonicalForm> & );
template ostream & operator << ( ostream &, const Factor<CanonicalForm> & );

template List<CFFactor> Union ( const List<CFFactor>&, const List<CFFactor>& );
template CanonicalForm crossprod ( const Array<CanonicalForm>&, const Array<CanonicalForm>& );
template CanonicalForm prod ( const Array<CanonicalForm>& );

// place here your own template stuff, not instantiated by factory
#include "tmpl_inst.h"
#include "class.cc"

template class List<int>;
template class ListIterator<int>;

template class List<IntList>;
template class ListIterator<IntList>;

template class Substitution<CanonicalForm>;
template class List<SForm>;
template class ListIterator<SForm>;

template List<CanonicalForm> Union ( const List<CanonicalForm>&, const List<CanonicalForm>& );
template List<CanonicalForm> Difference ( const List<CanonicalForm>&, const List<CanonicalForm>& );

template ostream & operator << ( ostream &, const List<int> & );
template ostream & operator << ( ostream &, const List<IntList> & );

// for charsets:
template class List<CFList>;
template class ListIterator<CFList>;

template ostream & operator << ( ostream &, const List<CFList> & );
