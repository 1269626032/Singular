b mmPrintDBMCB 
run
b mpsr_GetMsg
cont
next
graph display lv1
next
step
next
p *n
next
graph display d->arg1
next
graph display this
next
cont
r
b sleftv::Eval
c
next
graph display this
next
finish
next
cont
b mpsr_GetSValue
c
next
step
next
p *vh
b mpsr_GetLeftv
c
cont
step
next
cont
step
next
p na
p nc
next
p cop
next
cont
finish
next
run
b subexpr.cc:300
c
cont
b subexpr.cc:299
cont
run
finish
cont
b MPP_GetAnnots
c
next
graph display p->nextheaders[0]
next
p na
next
p aflags
p aflags & MP_AnnotValuated
p /x aflags
cont
kill
r
up
cont
b MPP_GetTypeSpec
c
next
p atype
p aflags
next
step
next
p na
p nc
next
cont
kill
run
cont
next
print h->misc.cop
next
p i
next
p i
next
finish
next
p atype
p aflags
next
p na2
p na2+1
next
p nt
p nc
p na
p (*value).uint32
cont
b impsr_PutRingAnnots
c
next
step
next
p flag
kill
run
cont
next
finish
next
finish
next
p atype
next
p na
p nt
finish
next
p atype
next
p p
p *p
next
step
next
step
next
p nvars
p nmons
next
step
next
p *n
next
finish
next
p dp->exp[0]
p dp->exps[0]
p dp->exps[1]
p dp->exps[2]
next
cont
b MPP_GetDenseDistPoly
b IMPP_GetDenseDistPoly
c
cont
next
p nmons
p nvars
step
p n
next
cont
c
cont
finish
cont
b mpsr_Header_2_Ring
c
cont
next
p r->N
graph display vh
next
p nc
cont
k
quit
run
b mpsr_Header_2_Ring
c
next
p nc
next
step
p nmon
next
step
next
gExpVector
p gExpVector
next
p pVariables
next
p pVariables
p exp[0]
p exp[1]
p exp[2]
p pp->exp[0]
p pp->exp[1]
next
step
next
cont
finish
next
step
next
graph display p
next
step
next
b MPP_Memory.c:661
cont
p i;
p i
p annot->atype
p vh->type
p ph->type
b mmPrintDBMCB
finish
cont
kill
run
cont
run
quit
b mpsr_Get.cc
b mpsr_GetLeftv.cc
b mpsr_GetLeftv
r
cont
next
graph display v
b jjCALL3MANY
cont
next
cont
kill
run
cont

