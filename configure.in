dnl Process this file with autoconf to produce a configure script
AC_INIT(Singular/matpol.h)
AC_PREFIX_DEFAULT(`pwd`)

dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl Version business --  set these here
dnl
# make them to env variables 
# pass them indirectly to subsequent configures
SINGULAR_MAJOR_VERSION=1
SINGULAR_MINOR_VERSION=2
SINGULAR_SUB_VERSION=0
SINGULAR_VERSION="${SINGULAR_MAJOR_VERSION}.${SINGULAR_MINOR_VERSION}.${SINGULAR_SUB_VERSION}"
VERSION_DATE="June 1998"
export SINGULAR_MINOR_VERSION
export SINGULAR_MAJOR_VERSION
export SINGULAR_SUB_VERSION
export SINGULAR_VERSION
export VERSION_DATE

dnl substitue them into the Makefiles
AC_SUBST(SINGULAR_MAJOR_VERSION)
AC_SUBST(SINGULAR_MINOR_VERSION)
AC_SUBST(SINGULAR_SUB_VERSION)

dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl those are needed to check for libs and headers, later on
dnl
AC_PROG_CC
AC_PROG_CPP
AC_AIX

dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl exec_prefix, bindir, libdir, includedir to some sensible values
dnl

# expand prefix and pass it to subsequent configures
test "x$prefix" = xNONE && prefix=${ac_default_prefix}; \
    ac_configure_args="$ac_configure_args --prefix=${prefix}"

# expand exec_prefix
if test "x$exec_prefix" = xNONE; then
  if test -r "singuname.sh"; then
    if (/bin/sh singuname.sh >/dev/null 2>&1) then
	exec_prefix=${prefix}/`/bin/sh singuname.sh`
        ac_configure_args="$ac_configure_args --exec_prefix=${exec_prefix}"
    else
      AC_MSG_ERROR(Unknown architecture: Check singuname.sh)
    fi
  else
    AC_MSG_ERROR(Need singuname.sh)
  fi
fi

# expand bindir
test "x$bindir" = 'x${exec_prefix}/bin' && \
  bindir="${exec_prefix}/bin" ; \
   ac_configure_args="$ac_configure_args --bindir=${bindir}"

# construct name of installed Singular executable
SINGULAR=${bindir}/Singular-${SINGULAR_MAJOR_VERSION}.${SINGULAR_MINOR_VERSION}.${SINGULAR_SUB_VERSION}
export SINGULAR
AC_SUBST(SINGULAR)

# expand libdir
test "x$libdir" = 'x${exec_prefix}/lib' && \
  libdir="${exec_prefix}/lib/${SINGULAR_VERSION}" ; \
   ac_configure_args="$ac_configure_args --libdir=${libdir}"

# expand includedir
test "x$includedir" = 'x${prefix}/include' &&  \
  includedir="${exec_prefix}/include/${SINGULAR_VERSION}" ; \
   ac_configure_args="$ac_configure_args --includedir=${includedir}"

# add to -I to CPPFLAGS and and -L to LDFLAGS, just to be sure
LDFLAGS="-L${libdir} ${LDFLAGS}"
CPPFLAGS="-I${includedir} ${CPPFLAGS}"


AC_MSG_CHECKING(whether _AIX is defined)
AC_CACHE_VAL(ac_cv_is_aix,
AC_EGREP_CPP(yes,
[#ifdef _AIX
    yes
#endif
], ac_cv_is_aix=yes, ac_cv_is_aix=no, 1))
if test "$ac_cv_is_aix" = yes; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi


dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl check for various libraries and headers
dnl
AC_CHECK_LIB(m, atof)
AC_CHECK_LIB(bsd, socket)
AC_CHECK_LIB(socket, listen)
AC_CHECK_LIB(nsl, gethostbyname)
AC_CHECK_LIB(gmp, mpq_init)
AC_CHECK_LIB(smallgmp, mpz_init)
AC_CHECK_LIB(MP, IMP_PutGmpInt)
AC_CHECK_LIB(MPT, MPT_GetTree)
AC_CHECK_LIB(singcf, atof)
AC_CHECK_LIB(singfac, atof)

AC_CHECK_HEADERS(gmp.h smallgmp.h MP.h  MPT.h factory.h factor.h)

if test "$ac_cv_lib_gmp_mpq_init" = yes && \
 test "$ac_cv_header_gmp_h" = yes; then
    ac_gmp_ok=yes
fi

if test "$ac_cv_lib_smallgmp_mpz_init" = yes && \
 test "$ac_cv_header_smallgmp_h" = yes && \
 test "$ac_cv_header_gmp_h" = yes; then
    ac_smallgmp_ok=yes
fi

if test "$ac_cv_lib_MP_IMP_PutGmpInt" = yes && \
 test "$ac_cv_lib_MPT_MPT_GetTree" && \
 test "$ac_cv_header_MP_h" = yes && \
 test "$ac_cv_header_MPT_h" = yes; then
  ac_MP_ok=yes
fi

if test "$ac_cv_lib_singcf_atof" = yes && \
 test "$ac_cv_header_factory_h" = yes; then
  ac_factory_ok=yes
fi

if test "$ac_cv_lib_singfac_atof" = yes && \
 test "$ac_cv_header_factor_h" = yes; then
  ac_libfac_ok=yes
fi


  
dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl Check whether or not to built various packages
dnl
AC_ARG_ENABLE(smallgmp, \
 [ --enable-PACKAGE        configure and build PACKAGE
  --disable-PACKAGE       do not configure and build PACKAGE
   where PACKAGE can be:
     smallgmp             minimal version of gmp written in C only])
AC_ARG_ENABLE(gmp, \
 [    gmp                  Gnu Multiple Precision package])
AC_ARG_ENABLE(MP, \
 [    MP                   Multi Protocol library])
AC_ARG_ENABLE(factory, \
 [    factory              polynomial factorization library])
AC_ARG_ENABLE(libfac, \
 [    libfac               char set and modp poly factorization library])
AC_ARG_ENABLE(sgroup, \
 [    sgroup               numerical semigroup computations])
AC_ARG_ENABLE(Singular, \
 [    Singular             CAS for Polynomial Computations])

AC_ARG_WITH(MP,\
 [ --with-PACKAGE          use PACKAGE, provide dependent functionality
  --without-PACKAGE       do not use PACKAGE, disable dependent functionality
   where PACKAGE can be:
     MP                   Multi Protocol library])
AC_ARG_WITH(factory, \
 [    factory              polynomial factorization library])
AC_ARG_WITH(libfac, \
 [    libfac               char set and modp poly factorization library])
AC_ARG_WITH(gmp, \
 [ --with-apint=PACKAGE    use PACKAGE for arbitary integer arithmetic
                          where PACKAGE can be gmp or smallgmp])

AC_MSG_CHECKING(whether to configure and build gmp lib)
if test "$enable_gmp" != yes && test "$enable_gmp" != no; then
  if test "$ac_gmp_ok" != yes && test -d gmp; then
    AC_MSG_RESULT(yes)
    enable_gmp=yes
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS gmp"
    ac_configure_args="$ac_configure_args --enable-gmp"
  else
    AC_MSG_RESULT(no)
    enable_gmp=no
  fi
elif test "$enable_gmp" = yes; then
  if test ! -d gmp; then
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(Can not find gmp subdir)
  else
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS gmp"
  fi
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to configure and build smallgmp lib)
if test "$enable_smallgmp" != yes && test "$enable_smallgmp" != no; then
  if test "$ac_smallgmp_ok" != yes && test "$ac_gmp_ok" != yes && \
     test "$enable_gmp" != yes && test -d smallgmp; then
    AC_MSG_RESULT(yes)
    enable_smallgmp=yes
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS smallgmp"
    ac_configure_args="$ac_configure_args --enable-smallgmp --enable-gmp"
  else
    AC_MSG_RESULT(no)
    enable_smallgmp=no
  fi
elif test "$enable_smallgmp" = yes; then
  if test ! -d smallgmp; then
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(Can not find smallgmp subdir)
  else
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS smallgmp"
    if test "$ac_gmp_ok" != yes && test "$enable_gmp" != yes; then
      ac_configure_args="$ac_configure_args --enable-gmp"
    fi
  fi
else 
  AC_MSG_RESULT(${enable_smallgmp})
fi

# Check whether we have at least one of smallgmp or gmp
if test "$ac_smallgmp_ok" != yes && test "$ac_gmp_ok" != yes && \
   test "$enable_smallgmp" != yes && test "$enable_gmp" != yes; then
  AC_MSG_ERROR(can neither find nor built gmp or smallgmp)
fi

# Check whether we need to cheat subsequent configures with --enable-gmp
if test "$ac_smallgmp_ok" != yes && test "$ac_gmp_ok" != yes; then
  ac_configure_args="$ac_configure_args --enable-gmp"
fi

AC_MSG_CHECKING(whether to configure and build MP lib)
if test "$enable_MP" != yes && test "$enable_MP" != no; then
  if test "$with_MP" != no && test "$ac_MP_ok" != yes && test -d MP && \
     (test "$enable_gmp" = yes || test "$ac_gmp_ok" = yes); then
    AC_MSG_RESULT(yes)
    enable_MP=yes
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS MP"
    ac_configure_args="$ac_configure_args --enable-MP"
  else
    AC_MSG_RESULT(no)
    enable_MP=no
  fi
elif test "$enable_MP" = yes; then
  if test ! -d MP; then
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(can not build MP without MP directory)
  fi
  if test "$enable_gmp" = yes || test "$ac_gmp_ok" = yes; then
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS MP"
  else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(can not build MP without gmp)
  fi
else
  AC_MSG_RESULT(no)
fi

  
AC_MSG_CHECKING(whether to configure and build factory lib)
if test "$enable_factory" != yes && test "$enable_factory" != no; then
  if test "$with_factory" != no && test "$ac_factory_ok" != yes && \
     test -d factory; then
    enable_factory=yes
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS factory"
    ac_configure_args="$ac_configure_args --enable-factory"
  else
    enable_factory=no
    AC_MSG_RESULT(no)
  fi
elif test "$enable_factory" = yes; then
  if test -d factory; then
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS factory"
  else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(can not build factory without factory directory)
  fi
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to configure and build libfac lib)
if test "$enable_libfac" != yes && test "$enable_libfac" != no; then
  if test "$with_libfac" != no && test "$ac_libfac_ok" != yes && \
     test -d libfac && \
     (test "$ac_factory_ok" = yes || test "$enable_factory" = yes); then
    enable_libfac=yes
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS libfac"
    ac_configure_args="$ac_configure_args --enable-libfac"
  else
    enable_libfac=no
    AC_MSG_RESULT(no)
  fi
elif  test "$enable_libfac" = yes; then
  if test ! -d libfac; then
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(can not build libfac without libfac directory)
  fi
  if test "$ac_factory_ok" = yes || test "$enable_factory" = yes; then
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS libfac"
  else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(Can not build libfac without factory)
  fi
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(whether to configure and build sgroup lib)
if test "$enable_sgroup" != yes && test "$enable_sgroup" != no; then
  if test "$with_sgroup" != no && test "$ac_sgroup_ok" != yes && \
     test -d sgroup && \
     (test "$ac_MP_ok" = yes || test "$enable_MP" = yes); then
    enable_sgroup=yes
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS sgroup"
    ac_configure_args="$ac_configure_args --enable-sgroup"
  else
    enable_sgroup=no
    AC_MSG_RESULT(no)
  fi
elif  test "$enable_sgroup" = yes; then
  if test ! -d sgroup; then
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(can not build sgroup without sgroup directory)
  fi
  if test "$ac_MP_ok" = yes || test "$enable_MP" = yes; then
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS sgroup"
  else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(Can not build sgroup without MP)
  fi
else
  AC_MSG_RESULT(no)
fi


AC_MSG_CHECKING(whether to configure and build Singular)
if test "$enable_Singular" != yes && test "$enable_Singular" != no; then
  if test "$with_Singular" != no && test -d Singular; then
    enable_Singular=yes
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS Singular"
    ac_configure_args="$ac_configure_args --enable-Singular"
  else
    enable_Singular=no
    AC_MSG_RESULT(no)
  fi
elif test "$enable_Singular" = yes; then
  if test -d Singular; then
    AC_MSG_RESULT(yes)
    CONFIG_SUBDIRS="$CONFIG_SUBDIRS Singular"
  else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(can not build Singular without Singular directory)
  fi
else
  AC_MSG_RESULT(no)
fi


dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl Check whether or not to use various packages
dnl
AC_MSG_CHECKING(wich apint package to use)
if test "$with_apint" = gmp; then
  if test "$ac_gmp_ok" = yes || test "$enable_gmp" = yes; then
    AC_MSG_RESULT(gmp)
  else
    AC_MSG_RESULT(none)
    AC_MSG_ERROR(can not use with gmp without finding or building it)
  fi
elif test "$with_apint" = smallgmp; then
  if test "$ac_smallgmp_ok" = yes || test "$enable_smallgmp" = yes; then
    AC_MSG_RESULT(smallgmp)
  else
    AC_MSG_RESULT(none)
    AC_MSG_ERROR(can not use with smallgmp without finding or building it)
  fi
elif test "$ac_gmp_ok" = yes || test "$enable_gmp"; then
    AC_MSG_RESULT(gmp)
    ac_configure_args="$ac_configure_args --with-apint=gmp"
else
   AC_MSG_RESULT(smallgmp)
   ac_configure_args="$ac_configure_args --with-apint=smallgmp"
fi

AC_MSG_CHECKING(whether to use with MP)
if test "$with_MP" = yes; then
  if test "$ac_MP_ok" = yes || test "$enable_MP" = yes; then
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(none)
    AC_MSG_ERROR(can not use with MP without finding or building it)
  fi
elif test "$with_MP" = no; then
  AC_MSG_RESULT(no)
elif test "$ac_MP_ok" = yes || test "$enable_MP" = yes; then
  AC_MSG_RESULT(yes)
  ac_configure_args="$ac_configure_args --with-MP"
else
  AC_MSG_RESULT(no)
  ac_configure_args="$ac_configure_args --without-MP"
fi

AC_MSG_CHECKING(whether to use with factory)
if test "$with_factory" = yes; then
  if test "$ac_factory_ok" = yes || test "$enable_factory" = yes; then
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(none)
    AC_MSG_ERROR(can not use with factory without finding or building it)
  fi
elif test "$with_factory" = no; then
  AC_MSG_RESULT(no)
elif test "$ac_factory_ok" = yes || test "$enable_factory" = yes; then
  AC_MSG_RESULT(yes)
  ac_configure_args="$ac_configure_args --with-factory"
else
  AC_MSG_RESULT(no)
  ac_configure_args="$ac_configure_args --without-factory"
fi
  
AC_MSG_CHECKING(whether to use with libfac)
if test "$with_libfac" = yes; then
  if test "$ac_libfac_ok" = yes || test "$enable_libfac" = yes; then
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(none)
    AC_MSG_ERROR(can not use with libfac without finding or building it)
  fi
elif test "$with_libfac" = no; then
  AC_MSG_RESULT(no)
elif test "$ac_libfac_ok" = yes || test "$enable_libfac" = yes; then
  AC_MSG_RESULT(yes)
  ac_configure_args="$ac_configure_args --with-libfac"
else
  AC_MSG_RESULT(no)
  ac_configure_args="$ac_configure_args --without-libfac"
fi


AC_MSG_CHECKING(whether to use with Singular)
if test "$with_Singular" != no && test "$with_Singular" != yes; then
  if test "$enable_Singular" = yes; then
    with_Singular=yes
  else
    with_Singular=no
  fi
  ac_configure_args="$ac_configure_args --with-Singular=$with_Singular"
fi

if test "$with_Singular" != no; then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl Check for known subdirs
dnl
if test -d smallgmp; then
  SUBDIRS="smallgmp"
fi
if test -d gmp; then
  SUBDIRS="gmp"
fi
if test -d MP; then
  SUBDIRS="$SUBDIRS MP"
fi
if test -d factory; then
  SUBDIRS="$SUBDIRS factory"
fi
if test -d libfac; then
  SUBDIRS="$SUBDIRS libfac"
fi
if test -d sgroup; then
  SUBDIRS="sgroup"
fi
if test -d Singular; then
  SUBDIRS="$SUBDIRS Singular"
fi
  

dnl lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
dnl Enough --wrap it up
dnl
AC_PROG_MAKE_SET
AC_SUBST(SUBDIRS)
AC_SUBST(CONFIG_SUBDIRS)
AC_CONFIG_SUBDIRS($CONFIG_SUBDIRS) 

AC_OUTPUT(Makefile doc/Makefile)
