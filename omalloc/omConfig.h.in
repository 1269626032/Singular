/*******************************************************************
 *  File:    omConfig.h.in
 *  Purpose: configuration for omalloc  
 *  Author:  obachman (Olaf Bachmann)
 *  Created: 11/99
 *  Version: $Id: omConfig.h.in,v 1.1.1.1 1999-11-18 17:45:52 obachman Exp $
 *******************************************************************/
#ifndef OM_CONFIG_H
#define OM_CONFIG_H

/*******************************************************************
 * Defines which are set by configure
 ******************************************************************/
/* define if you can inline */
#undef OM_INLINE
/* define to the name of addr2line program, undef otherwise */
#ifndef OM_PROG_ADDR2LINE
#undef OM_PROG_ADDR2LINE
#endif
/* define to the name of nm program, undef otherwise */
#ifndef OM_PROG_NM
#undef OM_PROG_NM
#endif
/* define if you have popen */
#ifndef HAVE_POPEN
#undef HAVE_POPEN
#endif
/* define if you have readlink */
#ifndef HAVE_READLINK
#undef HAVE_READLINK
#endif
/* define if you have getcwd */
#ifndef HAVE_GETCWD
#undef HAVE_GETCWD
#endif
/* define if you have getwd */
#ifndef HAVE_GETWD
#undef HAVE_GETWD
#endif
/* define if you have STDC_HEADERS */
#ifndef STDC_HEADERS
#undef STDC_HEADERS
#endif
/* define if you have unistd.h */
#ifndef HAVE_UNISTD_H
#undef HAVE_UNISTD_H
#endif
/* define to func which returns ith return addr */
#ifndef OM_RETURN_ADDR
#undef OM_RETURN_ADDR
#endif
/* define to func which returns ith frame addr */
#ifndef OM_FRAME_ADDR
#undef OM_FRAME_ADDR
#endif
/* define if OM_RETURN_ADDR actually works */
#ifndef OM_RETURN_ADDR_WORKS
#undef OM_RETURN_ADDR_WORKS
#endif
/* define if OM_FRAME_ADDR actually works */
#ifndef OM_FRAME_ADDR_WORKS
#undef OM_FRAME_ADDR_WORKS
#endif
/* Define sizeof(long) */
#ifndef SIZEOF_LONG
#define SIZEOF_LONG 4
#endif
#ifndef SIZEOF_SYSTEM_PAGE
/* Define pagesize of your system */
#define SIZEOF_SYSTEM_PAGE 4096
#endif
#ifndef SIZEOF_OM_PAGE
/* size of page as we can use it */
#define SIZEOF_OM_PAGE SIZEOF_SYSTEM_PAGE
#endif
#ifndef OM_ALIGN_8
/* define if you want your memory to be 8-aligned */
#undef OM_ALIGN_8
#endif
/* define if you want enable memory statistics */
#undef OM_HAVE_STAT
#ifndef HAVE_GMALLOC
/* Define if our gmalloc is to be used */
#undef HAVE_GMALLOC
#endif
#ifndef PROVIDE_MALLOC
/* define you you want omalloc to provide malloc, free, realloc */
#undef PROVIDE_MALLOC
#endif

/* define what to do on total out of memory */
#ifndef OM_OUT_OF_MEMORY
#define OM_OUT_OF_MEMORY() \
   fprintf(stderr, "***Emergency Exit: Out of Memory\n"); exit(1);
#endif

/* define hook which is called when running out of memory */
#ifndef OM_OUT_OF_MEMORY_HOOK
#define OM_OUT_OF_MEMORY_HOOK() 
#endif

/* define this if you want to monitor memory usage */
#ifndef OM_CHECK_PRINT
#define OM_CHECK_PRINT(bytesMalloc, bytesValloc)
#endif

/* define low-level malloc/free routines */
#ifndef OM_MALLOC
#define OM_MALLOC(size) malloc(size)
#endif
#ifndef OM_REALLOC
#define OM_REALLOC(addr, newsize) realloc(addr, newsize)
#endif
#ifndef OM_FREE
#define OM_FREE(addr)   free(addr)
#endif
#ifndef OM_VALLOC
#define OM_VALLOC(size) valloc(size)
#endif
#ifndef OM_VFREE
#define OM_VFREE(addr)  free(addr)
#endif



/*******************************************************************
 * Defines which are not set by configure
 ******************************************************************/
#ifndef SIZEOF_VOIDP
/* configure makes sure that SIZEOF_VOIDP == SIZEOF_LONG */
#define SIZEOF_VOIDP SIZEOF_LONG
#endif

#if SIZEOF_VOIDP == 8
#define LOG_SIZEOF_LONG  3
#define LOG_SIZEOF_VOIDP 3
#else
#define LOG_SIZEOF_LONG  2
#define LOG_SIZEOF_VOIDP 2
#endif

#ifndef CHAR_BIT
#define CHAR_BIT 8
#endif

#define BIT_SIZEOF_LONG CHAR_BIT*SIZEOF_LONG

/* define to enable assume */
#ifndef HAVE_OM_ASSUME
#ifndef NDEBUG
#define HAVE_OM_ASSUME
#endif
#endif

/* set to 0 to disable aso memory mamagent */
#ifndef HAVE_ASO
#define HAVE_ASO 1
#endif
#if defined(HAVE_ASO) && HAVE_ASO == 1
/* define to enable ASO debugging */
#undef ASO_DEBUG
#endif

#ifndef NULL
#define NULL ((void*)0)
#endif

#endif /* OM_CONFIG_H  */
