#!/usr/bin/perl
# $ Id: $
#
# makeheader - generate a header file out of several header file (ver 1.2).
#

#
# searchpath - search a file in a path and return full path.
#
sub searchpath {
    local ( $file, $path ) = @_;
    for ( split ( /:/, $path ) ) {
	if ( -f "$_/$file" ) {
	    return "$_/$file";
	}
    }
    return "";
}
	
if ( ( $#ARGV == -1 ) || ( $ARGV[0] =~ /-help|-\?/ ) ) {
    die "
usage: makeheader [-?] {-I<includedir>} <templatefile> <outfile>

This is makeheader, a header file generation tool.
With makeheader it is possible to generate a single header
file out of several other header files.

To include a header file into the generated header file
\(= <outfile>) use the command `.INCLUDE <includefile>' on a
single line in <templatefile>.
This line is replaced by sections marked with /*BEGINPUBLIC*/
and /*ENDPUBLIC*/ from <includefile>. <includefile> is looked up
in all <includedir>s, then in the current directory, then in
the base directory of <templatefile>.\n";
}

# get list of include directories
$includes = "";
while ( $ARGV[0] =~ /^-/ ) {
    $_ = shift;
    if ( /^-I(.*)/ ) {
	$includes .= ( $1 ? $1 : shift ) . ":";
    }
}
$includes .= ".:";

# check for rest of arguments
if ( $#ARGV < 1 ) {
    die "usage: makeheader [-?] {-I<includedir>} <templatefile> <outfile>\n\n";
}

$infile = shift( @ARGV );
$outfile = shift( @ARGV );
if ( $infile =~ /(.*)\// ) {
    $includes .= "$1:";
}

open( INFILE, $infile ) || 
    die "makeheader: Can not open template file $infile for reading!\n";
open( OUTFILE, ">$outfile" ) ||
    die "makeheader: Can not open header file $outfile for writing!\n";

while( <INFILE> ) {
    if ( /^\.INCLUDE/ ) {
	s/^\.INCLUDE //;
	chop;
	$inclfile = &searchpath( $_, $includes ) ||
	    die "makeheader: Can not open included file $_ for reading!\n";
	open( INCLFILE, $inclfile ) ||
	    die "makeheader: Can not open included file $_ for reading!\n";

	print OUTFILE "/* Stuff from $_ */";
	while ( <INCLFILE> ) {
	    if ( /\/\*BEGINPUBLIC\*\// ) {
		while ( <INCLFILE> ) {
		    last if ( /\/\*ENDPUBLIC\*\// );
		    print OUTFILE $_;
		}
	    }
	}
	close INCLFILE;
    }
    else {
	print OUTFILE $_;
    }
}
print OUTFILE "\n/* $outfile automatically generated by $0 on " .
    `date` . "*/\n";

close OUTFILE;
close INFILE;
